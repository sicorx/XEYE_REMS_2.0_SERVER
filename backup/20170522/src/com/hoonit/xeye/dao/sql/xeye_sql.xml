<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="XEYE">
	
	<!-- 매장정보마스터 상세내역 -->
    <select id="selectStrInfoMst" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT STR_CD
			  ,COMPANY_CD
			  ,VIEW_STR_CD
			  ,LOCAL_AREA_CD
			  ,CONT_DEMAND_POWER
			  ,GW_ID
			  ,GW_ADDR
			  ,GW_IP
			  ,GW_VENDOR
			  ,GW_HW_MODEL
			  ,GW_SW_VER
			  ,GW_SW_VER2
			  ,AUTH_YN
			  ,DIAGNOSIS_MODULE_TYPE
			  ,SUNRISE_TIME
			  ,SUNSET_TIME
			  ,OFF_TIME
			  ,ON_TIME
			  ,WEATHER_CD
			  ,FORECAST_TEMP
		FROM
		(
			SELECT STR_CD
				  ,COMPANY_CD
				  ,VIEW_STR_CD
				  ,LOCAL_AREA_CD
				  ,CONT_DEMAND_POWER
				  ,GW_ID
				  ,GW_ADDR
				  ,GW_IP
				  ,GW_VENDOR
				  ,GW_HW_MODEL
				  ,GW_SW_VER
				  ,GW_SW_VER2
				  ,AUTH_YN
				  ,DIAGNOSIS_MODULE_TYPE
			      ,SUNRISE_TIME
			      ,SUNSET_TIME
			      ,CONCAT(LPAD(Floor(changedSunriseTime/60), 2, '0'),':' ,LPAD(changedSunriseTime- (Floor(changedSunriseTime/60)*60 ), 2, '0')) AS OFF_TIME
				  ,CONCAT(LPAD(Floor(changedSunsetTime/60), 2, '0'),':' ,LPAD(changedSunsetTime- (Floor(changedSunsetTime/60)*60 ), 2, '0')) AS ON_TIME
				  ,WEATHER_CD
				  ,FORECAST_TEMP
			FROM
		    (
				SELECT STR_CD
					  ,COMPANY_CD
					  ,VIEW_STR_CD
					  ,LOCAL_AREA_CD
					  ,CONT_DEMAND_POWER
					  ,GW_ID
					  ,GW_ADDR
					  ,GW_IP
					  ,GW_VENDOR
					  ,GW_HW_MODEL
					  ,GW_SW_VER
					  ,GW_SW_VER2
					  ,AUTH_YN
					  ,DIAGNOSIS_MODULE_TYPE
				      ,SUNRISE_TIME
				      ,SUNSET_TIME
				      ,SUBSTRING_INDEX( SUNRISE_TIME, ':', 1)*60+SUBSTRING_INDEX( SUNRISE_TIME, ':', -1) + OFF_TIME AS changedSunriseTime
		              ,SUBSTRING_INDEX( SUNSET_TIME, ':', 1)*60+SUBSTRING_INDEX( SUNSET_TIME, ':', -1) + ON_TIME    AS changedSunsetTime
					  ,WEATHER_CD
					  ,FORECAST_TEMP
		        FROM
		        (       
					SELECT A.STR_CD
					      ,A.COMPANY_CD
						  ,A.VIEW_STR_CD
						  ,A.LOCAL_AREA_CD
						  ,A.CONT_DEMAND_POWER
						  ,E.GW_ID
						  ,E.GW_ADDR
						  ,E.GW_IP
						  ,E.GW_VENDOR
						  ,E.GW_HW_MODEL
						  ,E.GW_SW_VER
						  ,E.GW_SW_VER2
						  ,E.AUTH_YN
						  ,E.DIAGNOSIS_MODULE_TYPE
					      ,IFNULL(B.SUNRISE_TIME, '08:00') AS SUNRISE_TIME
		                  ,IFNULL(B.SUNSET_TIME, '17:00')  AS SUNSET_TIME
		                  ,CASE WHEN DATE_FORMAT(now(),'%Y%m%d') <![CDATA[ >= ]]> D.APPDT_DT THEN SUBSTRING_INDEX( D.STR_CONF_VAL, ',', 1) ELSE SUBSTRING_INDEX( D.STR_CONF_VAL_OLD, ',', 1) END AS OFF_TIME
		                  ,CASE WHEN DATE_FORMAT(now(),'%Y%m%d') <![CDATA[ >= ]]> D.APPDT_DT THEN SUBSTRING_INDEX( D.STR_CONF_VAL, ',', -1) ELSE SUBSTRING_INDEX( D.STR_CONF_VAL_OLD, ',', -1) END AS ON_TIME
						  ,IFNULL(B.WEATHER_CD , '0') AS WEATHER_CD
				          ,IFNULL(CAST(B.FORECAST_TEMP AS DECIMAL(0)), 0) AS FORECAST_TEMP
		            FROM TH_STR_INFO_MST A
		            LEFT JOIN TH_FORECAST_LATEST B
		              ON A.LOCAL_AREA_CD = B.LOCAL_AREA_CD                                 
		                 AND B.YYYYMMDD = CASE WHEN DATE_FORMAT(now(),'%H') <![CDATA[ < ]]> 3 THEN DATE_FORMAT(now() - INTERVAL 1 DAY,'%Y%m%d')
		                                       WHEN DATE_FORMAT(now(),'%H') <![CDATA[ >= ]]> 3 THEN DATE_FORMAT(now(),'%Y%m%d')  ELSE '' END
		                 AND HH = ( 
									SELECT MAX(HH) 
									FROM TH_FORECAST_LATEST
		                            WHERE LOCAL_AREA_CD = A.LOCAL_AREA_CD
		                            AND YYYYMMDD = CASE WHEN DATE_FORMAT(now(),'%H') <![CDATA[ < ]]> 3 THEN DATE_FORMAT(now() - INTERVAL 1 DAY,'%Y%m%d')
		                                                WHEN DATE_FORMAT(now(),'%H') <![CDATA[ >= ]]> 3 THEN DATE_FORMAT(now(),'%Y%m%d')  ELSE '' END
		                            AND HH <![CDATA[ <= ]]> CASE WHEN DATE_FORMAT(now(),'%H') <![CDATA[ < ]]> 3 THEN '24' 
		                                                         WHEN DATE_FORMAT(now(),'%H') <![CDATA[ >= ]]> 3 THEN DATE_FORMAT(now(),'%H') ELSE '' END
		                          )
		            LEFT JOIN TH_COMPANY_MST C
		              ON A.COMPANY_CD = C.COMPANY_CD
		                 AND B.COUNTRY_CD = C.COUNTRY_CD
		            LEFT JOIN TH_STR_ENV_CONF_MST D
		              ON A.STR_CD = D.STR_CD
		                 AND D.CONF_SP = 'SIGN_DELY'
		            INNER JOIN TH_STR_GW_MST E 
			  		   ON A.STR_CD = E.STR_CD 
		            <isEqual property="GW_ID" compareValue="0">
						WHERE A.VIEW_STR_CD = #STR_CD#
					</isEqual>
					<isNotEqual property="GW_ID" compareValue="0">
						WHERE A.STR_CD = #STR_CD#
					</isNotEqual>
		        ) A
		    ) B
		) A
	</select>
	
	<!-- 매장정보마스터 상세내역2 -->
    <select id="selectStrInfoMst2" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	SELECT STR_CD
			  ,COMPANY_CD
			  ,VIEW_STR_CD
			  ,LOCAL_AREA_CD
			  ,CONT_DEMAND_POWER
			  ,SUNRISE_TIME
			  ,SUNSET_TIME
			  ,OFF_TIME
			  ,ON_TIME
			  ,WEATHER_CD
			  ,FORECAST_TEMP
		FROM
		(
			SELECT STR_CD
				  ,COMPANY_CD
				  ,VIEW_STR_CD
				  ,LOCAL_AREA_CD
				  ,CONT_DEMAND_POWER
			      ,SUNRISE_TIME
			      ,SUNSET_TIME
			      ,CONCAT(LPAD(Floor(changedSunriseTime/60), 2, '0'),':' ,LPAD(changedSunriseTime- (Floor(changedSunriseTime/60)*60 ), 2, '0')) AS OFF_TIME
				  ,CONCAT(LPAD(Floor(changedSunsetTime/60), 2, '0'),':' ,LPAD(changedSunsetTime- (Floor(changedSunsetTime/60)*60 ), 2, '0')) AS ON_TIME
				  ,WEATHER_CD
				  ,FORECAST_TEMP
			FROM
		    (
				SELECT STR_CD
					  ,COMPANY_CD
					  ,VIEW_STR_CD
					  ,LOCAL_AREA_CD
					  ,CONT_DEMAND_POWER
				      ,SUNRISE_TIME
				      ,SUNSET_TIME
				      ,SUBSTRING_INDEX( SUNRISE_TIME, ':', 1)*60+SUBSTRING_INDEX( SUNRISE_TIME, ':', -1) + OFF_TIME AS changedSunriseTime
		              ,SUBSTRING_INDEX( SUNSET_TIME, ':', 1)*60+SUBSTRING_INDEX( SUNSET_TIME, ':', -1) + ON_TIME    AS changedSunsetTime
					  ,WEATHER_CD
					  ,FORECAST_TEMP
		        FROM
		        (       
					SELECT A.STR_CD
					      ,A.COMPANY_CD
						  ,A.VIEW_STR_CD
						  ,A.LOCAL_AREA_CD
						  ,A.CONT_DEMAND_POWER
					      ,IFNULL(B.SUNRISE_TIME, '08:00') AS SUNRISE_TIME
		                  ,IFNULL(B.SUNSET_TIME, '17:00')  AS SUNSET_TIME
		                  ,CASE WHEN DATE_FORMAT(now(),'%Y%m%d') <![CDATA[ >= ]]> D.APPDT_DT THEN SUBSTRING_INDEX( D.STR_CONF_VAL, ',', 1) ELSE SUBSTRING_INDEX( D.STR_CONF_VAL_OLD, ',', 1) END AS OFF_TIME
		                  ,CASE WHEN DATE_FORMAT(now(),'%Y%m%d') <![CDATA[ >= ]]> D.APPDT_DT THEN SUBSTRING_INDEX( D.STR_CONF_VAL, ',', -1) ELSE SUBSTRING_INDEX( D.STR_CONF_VAL_OLD, ',', -1) END AS ON_TIME
						  ,IFNULL(B.WEATHER_CD , '0') AS WEATHER_CD
				          ,IFNULL(CAST(B.FORECAST_TEMP AS DECIMAL(0)), 0) AS FORECAST_TEMP
		            FROM TH_STR_INFO_MST A
		            LEFT JOIN TH_FORECAST_LATEST B
		              ON A.LOCAL_AREA_CD = B.LOCAL_AREA_CD                                 
		                 AND B.YYYYMMDD = CASE WHEN DATE_FORMAT(now(),'%H') <![CDATA[ < ]]> 3 THEN DATE_FORMAT(now() - INTERVAL 1 DAY,'%Y%m%d')
		                                       WHEN DATE_FORMAT(now(),'%H') <![CDATA[ >= ]]> 3 THEN DATE_FORMAT(now(),'%Y%m%d')  ELSE '' END
		                 AND HH = ( 
									SELECT MAX(HH) 
									FROM TH_FORECAST_LATEST
		                            WHERE LOCAL_AREA_CD = A.LOCAL_AREA_CD
		                            AND YYYYMMDD = CASE WHEN DATE_FORMAT(now(),'%H') <![CDATA[ < ]]> 3 THEN DATE_FORMAT(now() - INTERVAL 1 DAY,'%Y%m%d')
		                                                WHEN DATE_FORMAT(now(),'%H') <![CDATA[ >= ]]> 3 THEN DATE_FORMAT(now(),'%Y%m%d')  ELSE '' END
		                            AND HH <![CDATA[ <= ]]> CASE WHEN DATE_FORMAT(now(),'%H') <![CDATA[ < ]]> 3 THEN '24' 
		                                                         WHEN DATE_FORMAT(now(),'%H') <![CDATA[ >= ]]> 3 THEN DATE_FORMAT(now(),'%H') ELSE '' END
		                          )
		            LEFT JOIN TH_COMPANY_MST C
		              ON A.COMPANY_CD = C.COMPANY_CD
		                 AND B.COUNTRY_CD = C.COUNTRY_CD
		            LEFT JOIN TH_STR_ENV_CONF_MST D
		              ON A.STR_CD = D.STR_CD
		                 AND D.CONF_SP = 'SIGN_DELY'
					WHERE A.STR_CD = #STR_CD#
		        ) A
		    ) B
		) A
    </select>
	
	<!-- 일출일몰시간 상세내역 -->
    <select id="selectSunRisetDetail" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	SELECT SUNRISE_TIME
		      ,SUNSET_TIME
		FROM
		(
			SELECT B.SUNRISET_AREA_CD
			FROM
			(
				SELECT LOCAL_AREA_CD
				FROM TH_STR_INFO_MST
				WHERE USE_YN = 'Y'
				AND STR_CD = #STR_CD#
			) A
			INNER JOIN TH_AREA_MST B ON A.LOCAL_AREA_CD = B.LOCAL_AREA_CD AND B.COUNTRY_CD = 'KR'
		) A
		INNER JOIN (
				   		SELECT SUNRISET_CD
					     	  ,SUNRISE_TIME
					      	  ,SUNSET_TIME
						FROM TH_SUNRISET_MST A
						WHERE MMDD = DATE_FORMAT(NOW(), '%m%d')
						AND COUNTRY_CD = 'KR'
				   ) B ON A.SUNRISET_AREA_CD = B.SUNRISET_CD
    </select>
    
    <!-- 매장별 일출일몰시간 목록 -->
    <select id="selectStoreSunRisetList" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	SELECT A.STR_CD
		      ,B.SUNRISE_TIME
		      ,B.SUNSET_TIME
		FROM
		(
			SELECT A.STR_CD
			      ,B.SUNRISET_AREA_CD
			FROM
			(
				SELECT STR_CD
				      ,LOCAL_AREA_CD
				FROM TH_STR_INFO_MST
				WHERE USE_YN = 'Y'
			) A
			INNER JOIN TH_AREA_MST B ON A.LOCAL_AREA_CD = B.LOCAL_AREA_CD AND B.COUNTRY_CD = 'KR'
		) A
		INNER JOIN (
						SELECT SUNRISET_CD
				      		  ,SUNRISE_TIME
				      		  ,SUNSET_TIME
						FROM TH_SUNRISET_MST A
						WHERE MMDD = DATE_FORMAT(NOW(), '%m%d')
						AND COUNTRY_CD = 'KR'
		) B ON A.SUNRISET_AREA_CD = B.SUNRISET_CD
    </select>
	
	<!-- 냉난방정책월별 목록 -->
    <select id="selectHACPolicyMMList" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	SELECT MM
    	      ,MODE
    	FROM TH_HAC_POLICY_MM_CONF
    	WHERE COMPANY_CD = #COMPANY_CD#
    	ORDER BY MM ASC
    </select>
    
    <!-- 냉난방권장온도 목록 -->
    <select id="selectHACRecommTempList" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	SELECT A.RECOMM_MM
    	      ,A.RECOMM_TEMP
    	FROM
    	(
	    	SELECT SUBSTRING_INDEX(STR_TO_DATE(YYYYMM, '%Y%m'), '-', 1) AS RECOMM_YEAR
	    	      ,SUBSTRING_INDEX(DATE_FORMAT(STR_TO_DATE(YYYYMM, '%Y%m'), '%m-%Y'), '-', 1) AS RECOMM_MM
	    	      ,CAST(RECOMM_TEMP AS DECIMAL(0)) AS RECOMM_TEMP
	    	FROM TH_HAC_RECOMM_TEMP_MNT
	    	WHERE COMPANY_CD = #COMPANY_CD#
    	) A
    	WHERE A.RECOMM_YEAR = DATE_FORMAT(NOW(), '%Y')
    	ORDER BY A.RECOMM_MM ASC
    </select>
    
    <!-- 도어센서 포트번호 -->
    <select id="selectDoorSensorPortNo" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	SELECT PORT_NO
		FROM TH_STR_REMS_DEVICE_MST
		WHERE STR_CD = #STR_CD#
		AND DEVICE_TYPE = 'D'
		AND USE_YN = 'Y'
    </select>
	
	<!-- 매장게이트웨이마스터 수정 -->
	<update id="updateGWMst" parameterClass="java.util.Map">
		UPDATE TH_STR_GW_MST
			SET GW_ADDR        = #GW_ADDR#
			   ,GW_IP          = #GW_IP#
			   ,GW_VENDOR      = #GW_VENDOR#
			   ,GW_HW_MODEL    = #GW_HW_MODEL#
			   ,GW_SW_VER      = #GW_SW_VER#
			   ,GW_SW_VER2     = #GW_SW_VER2#
			   ,FINAL_MOD_ID   = #FINAL_MOD_ID#
			   ,FINAL_MOD_DTTM = NOW()
		WHERE STR_CD = #STR_CD#
	</update>
	
	<!-- 매장채널별전력사용량기초자료 등록 -->
	<insert id="insertTH_STR_CHN_ELEC_USE_BASE" parameterClass="java.util.Map">
		INSERT INTO TH_STR_CHN_ELEC_USE_BASE
		(
		     STR_CD
		    ,YYYYMMDD
		    ,HHMIN
		    ,EP_1CH_EFT_WATAGE
		    ,EP_1CH_5MIN_WATAGE
		    ,EP_1CH_ACT_WATAGE
		    ,EP_2CH_EFT_WATAGE
		    ,EP_2CH_5MIN_WATAGE
		    ,EP_2CH_ACT_WATAGE
		    ,EP_3CH_EFT_WATAGE
		    ,EP_3CH_5MIN_WATAGE
		    ,EP_3CH_ACT_WATAGE
		    ,EP_4CH_EFT_WATAGE
		    ,EP_4CH_5MIN_WATAGE
		    ,EP_4CH_ACT_WATAGE
		    ,EP_5CH_EFT_WATAGE
		    ,EP_5CH_5MIN_WATAGE
		    ,EP_5CH_ACT_WATAGE
		    ,EP_6CH_EFT_WATAGE
		    ,EP_6CH_5MIN_WATAGE
		    ,EP_6CH_ACT_WATAGE
		    ,EP_7CH_R_EFT_WATAGE
		    ,EP_7CH_R_5MIN_WATAGE
		    ,EP_7CH_R_ACT_WATAGE
		    ,EP_7CH_S_EFT_WATAGE
		    ,EP_7CH_S_5MIN_WATAGE
		    ,EP_7CH_S_ACT_WATAGE
		    ,EP_7CH_T_EFT_WATAGE
		    ,EP_7CH_T_5MIN_WATAGE
		    ,EP_7CH_T_ACT_WATAGE
		    ,EP_8CH_R_EFT_WATAGE
		    ,EP_8CH_R_5MIN_WATAGE
		    ,EP_8CH_R_ACT_WATAGE
		    ,EP_8CH_S_EFT_WATAGE
		    ,EP_8CH_S_5MIN_WATAGE
		    ,EP_8CH_S_ACT_WATAGE
		    ,EP_8CH_T_EFT_WATAGE
		    ,EP_8CH_T_5MIN_WATAGE
		    ,EP_8CH_T_ACT_WATAGE
		    ,EP_1CH_STATUS
		    ,EP_2CH_STATUS
		    ,EP_3CH_STATUS
		    ,EP_4CH_STATUS
		    ,EP_5CH_STATUS
		    ,EP_6CH_STATUS
		    ,EP_7CH_R_STATUS
		    ,EP_7CH_S_STATUS
		    ,EP_7CH_T_STATUS
		    ,EP_8CH_R_STATUS
		    ,EP_8CH_S_STATUS
		    ,EP_8CH_T_STATUS
		    ,REGI_ID
		    ,REGI_DTTM
		    ,FINAL_MOD_ID
		    ,FINAL_MOD_DTTM
		)
		VALUES
		(
		     #STR_CD#
		    ,#YYYYMMDD#
		    ,#HHMIN#
		    ,#EP_1CH_EFT_WATAGE#
		    ,#EP_1CH_5MIN_WATAGE#
		    ,#EP_1CH_ACT_WATAGE#
		    ,#EP_2CH_EFT_WATAGE#
		    ,#EP_2CH_5MIN_WATAGE#
		    ,#EP_2CH_ACT_WATAGE#
		    ,#EP_3CH_EFT_WATAGE#
		    ,#EP_3CH_5MIN_WATAGE#
		    ,#EP_3CH_ACT_WATAGE#
		    ,#EP_4CH_EFT_WATAGE#
		    ,#EP_4CH_5MIN_WATAGE#
		    ,#EP_4CH_ACT_WATAGE#
		    ,#EP_5CH_EFT_WATAGE#
		    ,#EP_5CH_5MIN_WATAGE#
		    ,#EP_5CH_ACT_WATAGE#
		    ,#EP_6CH_EFT_WATAGE#
		    ,#EP_6CH_5MIN_WATAGE#
		    ,#EP_6CH_ACT_WATAGE#
		    ,#EP_7CH_R_EFT_WATAGE#
		    ,#EP_7CH_R_5MIN_WATAGE#
		    ,#EP_7CH_R_ACT_WATAGE#
		    ,#EP_7CH_S_EFT_WATAGE#
		    ,#EP_7CH_S_5MIN_WATAGE#
		    ,#EP_7CH_S_ACT_WATAGE#
		    ,#EP_7CH_T_EFT_WATAGE#
		    ,#EP_7CH_T_5MIN_WATAGE#
		    ,#EP_7CH_T_ACT_WATAGE#
		    ,#EP_8CH_R_EFT_WATAGE#
		    ,#EP_8CH_R_5MIN_WATAGE#
		    ,#EP_8CH_R_ACT_WATAGE#
		    ,#EP_8CH_S_EFT_WATAGE#
		    ,#EP_8CH_S_5MIN_WATAGE#
		    ,#EP_8CH_S_ACT_WATAGE#
		    ,#EP_8CH_T_EFT_WATAGE#
		    ,#EP_8CH_T_5MIN_WATAGE#
		    ,#EP_8CH_T_ACT_WATAGE#
		    ,#EP_1CH_STATUS#
		    ,#EP_2CH_STATUS#
		    ,#EP_3CH_STATUS#
		    ,#EP_4CH_STATUS#
		    ,#EP_5CH_STATUS#
		    ,#EP_6CH_STATUS#
		    ,#EP_7CH_R_STATUS#
		    ,#EP_7CH_S_STATUS#
		    ,#EP_7CH_T_STATUS#
		    ,#EP_8CH_R_STATUS#
		    ,#EP_8CH_S_STATUS#
		    ,#EP_8CH_T_STATUS#
		    ,#REGI_ID#
		    ,NOW()
		    ,#REGI_ID#
		    ,NOW()
		)
	</insert>
	
	<!-- 매장REMS장비기초자료 등록 -->
	<insert id="insertTH_STR_REMS_DEVICE_BASE" parameterClass="java.util.Map">
		INSERT INTO TH_STR_REMS_DEVICE_BASE
		(
		     STR_CD
		    ,YYYYMMDD
		    ,HHMIN
		    ,TEMON_ID
		    ,TEMON_TYPE
		    ,PORT_NO
		    ,DEVICE_TYPE
		    ,ALARM_YN
		    ,SENS_TEMP
		    ,SEND_SP
		    ,REGI_ID
		    ,REGI_DTTM
		    ,FINAL_MOD_ID
		    ,FINAL_MOD_DTTM
		)
		SELECT STR_CD
		      ,#YYYYMMDD#
		      ,#HHMIN#
		      ,TEMON_ID
		      ,TEMON_TYPE
		      ,PORT_NO
		      ,DEVICE_TYPE
		      ,(
				 CASE WHEN #SENS_TEMP# = 'E' THEN 'E'
		              ELSE 
						  (
							CASE WHEN (A.TEMON_TYPE = 'T' OR A.TEMON_TYPE = 'Z') AND #SENS_TEMP# <![CDATA[ > ]]> A.MAX_TEMP THEN 'H'
								 WHEN (A.TEMON_TYPE = 'T' OR A.TEMON_TYPE = 'Z') AND #SENS_TEMP# <![CDATA[ < ]]> A.MIN_TEMP THEN 'L'
		                         WHEN (A.TEMON_TYPE = 'T' OR A.TEMON_TYPE = 'Z') AND #SENS_TEMP# <![CDATA[ <= ]]> A.MAX_TEMP AND #SENS_TEMP# <![CDATA[ >= ]]> A.MIN_TEMP THEN 'N'
		                         WHEN A.TEMON_TYPE = 'A' AND #SENS_TEMP# = '0' THEN 'Y'
		                         WHEN A.TEMON_TYPE = 'A' AND #SENS_TEMP# = '1' THEN 'N'
		                         ELSE 'E'
							END
		                  )
		         END
			   ) AS ALARM_YN
		      ,(
		         CASE WHEN (A.TEMON_TYPE = 'T' OR A.TEMON_TYPE = 'Z') THEN #SENS_TEMP#
		              ELSE null
				 END
		       ) AS SENS_TEMP
		      ,(
		         CASE WHEN (A.DEVICE_TYPE = 'W' AND #DOOR_SENS_VAL# = '0') THEN '2'
		              ELSE '1'
		         END
		       ) AS SEND_SP
		      ,#REGI_ID#
		      ,NOW()
		      ,#REGI_ID#
		      ,NOW()
		FROM TH_STR_REMS_DEVICE_MST A
		WHERE USE_YN = 'Y'
		AND STR_CD = #STR_CD#
		AND TEMON_TYPE = #TEMON_TYPE#
		AND PORT_NO = #PORT_NO#
	</insert>
	
	<!-- 매장환경센서기초자료 등록 -->
	<insert id="insertTH_STR_SENSOR_BASE" parameterClass="java.util.Map">
		INSERT INTO TH_STR_SENSOR_BASE
		(
		     STR_CD
		    ,YYYYMMDD
		    ,HHMIN
		    ,SENSE_TEMP_N1
		    ,SENSE_HUMID_N1
		    ,SENSE_TEMP_N2
		    ,SENSE_HUMID_N2
		    ,SENSE_TEMP_N3
		    ,SENSE_HUMID_N3
		    ,SENSE_TEMP_N4
		    ,SENSE_HUMID_N4
		    ,SENSE_TEMP_N5
		    ,SENSE_HUMID_N5
		    ,SENSE_TEMP_N6
		    ,SENSE_HUMID_N6
		    ,SENSE_TEMP_N7
		    ,SENSE_HUMID_N7
		    ,SENSE_TEMP_N8
		    ,SENSE_HUMID_N8
		    ,SENSE_TEMP_N9
		    ,SENSE_HUMID_N9
		    ,T_SENSOR_SENSE_TEMP_N1
		    ,T_SENSOR_SENSE_HUMID_N1
		    ,T_SENSOR_SENSE_TEMP_N2
		    ,T_SENSOR_SENSE_HUMID_N2
		    ,T_SENSOR_SENSE_TEMP_N3
		    ,T_SENSOR_SENSE_HUMID_N3
		    ,T_SENSOR_SENSE_TEMP_N4
		    ,T_SENSOR_SENSE_HUMID_N4
		    ,T_SENSOR_SENSE_TEMP_N5
		    ,T_SENSOR_SENSE_HUMID_N5
		    ,T_SENSOR_SENSE_TEMP_N6
		    ,T_SENSOR_SENSE_HUMID_N6
		    ,T_SENSOR_SENSE_TEMP_N7
		    ,T_SENSOR_SENSE_HUMID_N7
		    ,T_SENSOR_SENSE_TEMP_N8
		    ,T_SENSOR_SENSE_HUMID_N8
		    ,T_SENSOR_SENSE_TEMP_N9
		    ,T_SENSOR_SENSE_HUMID_N9
		    ,HACON_STAT_CD_N1
		    ,T_SENSOR_STAT_CD_N1
		    ,HACON_STAT_CD_N2
		    ,T_SENSOR_STAT_CD_N2
		    ,HACON_STAT_CD_N3
		    ,T_SENSOR_STAT_CD_N3
		    ,HACON_STAT_CD_N4
		    ,T_SENSOR_STAT_CD_N4
		    ,HACON_STAT_CD_N5
		    ,T_SENSOR_STAT_CD_N5
		    ,HACON_STAT_CD_N6
		    ,T_SENSOR_STAT_CD_N6
		    ,HACON_STAT_CD_N7
		    ,T_SENSOR_STAT_CD_N7
		    ,HACON_STAT_CD_N8
		    ,T_SENSOR_STAT_CD_N8
		    ,HACON_STAT_CD_N9
		    ,T_SENSOR_STAT_CD_N9
		    ,SIGN_STAT_CD
		    ,REGI_ID
		    ,REGI_DTTM
		)
		VALUES
		(
			 #STR_CD#
		    ,#YYYYMMDD#
		    ,#HHMIN#
		    ,#SENSE_TEMP_N1#
		    ,#SENSE_HUMID_N1#
		    ,#SENSE_TEMP_N2#
		    ,#SENSE_HUMID_N2#
		    ,#SENSE_TEMP_N3#
		    ,#SENSE_HUMID_N3#
		    ,#SENSE_TEMP_N4#
		    ,#SENSE_HUMID_N4#
		    ,#SENSE_TEMP_N5#
		    ,#SENSE_HUMID_N5#
		    ,#SENSE_TEMP_N6#
		    ,#SENSE_HUMID_N6#
		    ,#SENSE_TEMP_N7#
		    ,#SENSE_HUMID_N7#
		    ,#SENSE_TEMP_N8#
		    ,#SENSE_HUMID_N8#
		    ,#SENSE_TEMP_N9#
		    ,#SENSE_HUMID_N9#
		    ,#T_SENSOR_SENSE_TEMP_N1#
		    ,#T_SENSOR_SENSE_HUMID_N1#
		    ,#T_SENSOR_SENSE_TEMP_N2#
		    ,#T_SENSOR_SENSE_HUMID_N2#
		    ,#T_SENSOR_SENSE_TEMP_N3#
		    ,#T_SENSOR_SENSE_HUMID_N3#
		    ,#T_SENSOR_SENSE_TEMP_N4#
		    ,#T_SENSOR_SENSE_HUMID_N4#
		    ,#T_SENSOR_SENSE_TEMP_N5#
		    ,#T_SENSOR_SENSE_HUMID_N5#
		    ,#T_SENSOR_SENSE_TEMP_N6#
		    ,#T_SENSOR_SENSE_HUMID_N6#
		    ,#T_SENSOR_SENSE_TEMP_N7#
		    ,#T_SENSOR_SENSE_HUMID_N7#
		    ,#T_SENSOR_SENSE_TEMP_N8#
		    ,#T_SENSOR_SENSE_HUMID_N8#
		    ,#T_SENSOR_SENSE_TEMP_N9#
		    ,#T_SENSOR_SENSE_HUMID_N9#
		    ,#HACON_STAT_CD_N1#
		    ,#T_SENSOR_STAT_CD_N1#
		    ,#HACON_STAT_CD_N2#
		    ,#T_SENSOR_STAT_CD_N2#
		    ,#HACON_STAT_CD_N3#
		    ,#T_SENSOR_STAT_CD_N3#
		    ,#HACON_STAT_CD_N4#
		    ,#T_SENSOR_STAT_CD_N4#
		    ,#HACON_STAT_CD_N5#
		    ,#T_SENSOR_STAT_CD_N5#
		    ,#HACON_STAT_CD_N6#
		    ,#T_SENSOR_STAT_CD_N6#
		    ,#HACON_STAT_CD_N7#
		    ,#T_SENSOR_STAT_CD_N7#
		    ,#HACON_STAT_CD_N8#
		    ,#T_SENSOR_STAT_CD_N8#
		    ,#HACON_STAT_CD_N9#
		    ,#T_SENSOR_STAT_CD_N9#
		    ,#SIGN_STAT_CD#
		    ,#REGI_ID#
		    ,NOW()
		)
	</insert>
	
	<!-- 매장인버터허브상태 등록 -->
	<insert id="insertTH_STR_INV_HUB_STATUS" parameterClass="java.util.Map">
		INSERT INTO TH_STR_INV_HUB_STATUS
		(
		     STR_CD
		    ,YYYYMMDD
		    ,HHMIN
		    ,HUB_ID
		    ,PORT_NO
		    ,DEVICE_TYPE
		    ,FW_VER
		    ,MODEL
		    ,ALARM_MASK
		    ,ALARM_SP
		    ,ERR_CD
		    ,OPER_MODE
		    ,SENS_TEMP
		    ,SENS_TEMP_CONF
		    ,SENS_TEMP_OUT
		    ,MAX_TEMP_ALARM_YN
		    ,MAX_TEMP
		    ,MIN_TEMP_ALARM_YN
		    ,MIN_TEMP
		    ,DEFROST_SENS_TEMP
		    ,DEFW_OWNER
		    ,DEFROST_TEMP_CONF
		    ,DEFROST_TERM
		    ,DEFROST_DELAY
		    ,DEWATER_DELAY
		    ,REGI_ID
		    ,REGI_DTTM
		    ,FINAL_MOD_ID
		    ,FINAL_MOD_DTTM
		)
		SELECT STR_CD
		      ,#YYYYMMDD#
		      ,#HHMIN#
		      ,HUB_ID
		      ,PORT_NO
		      ,DEVICE_TYPE
		      ,(#FW_VER# * 0.01)
		      ,#MODEL#
		      ,#ALARM_MASK#
		      ,#ALARM_SP#
		      ,#ERR_CD#
		      ,#OPER_MODE#
		      ,TRUNCATE((#SENS_TEMP# / 10), 1)
		      ,TRUNCATE((#SENS_TEMP_CONF# / 10), 1)
		      ,TRUNCATE((#SENS_TEMP_OUT# / 10), 1)
		      ,#MAX_TEMP_ALARM_YN#
		      ,#MAX_TEMP#
		      ,#MIN_TEMP_ALARM_YN#
		      ,#MIN_TEMP#
		      ,TRUNCATE((#DEFROST_SENS_TEMP# / 10), 1)
		      ,#DEFW_OWNER#
		      ,#DEFROST_TEMP_CONF#
		      ,#DEFROST_TERM#
		      ,#DEFROST_DELAY#
		      ,#DEWATER_DELAY#
		      ,#REGI_ID#
		      ,NOW()
		      ,#REGI_ID#
		      ,NOW()
		FROM TH_STR_INV_HUB_MST
		WHERE STR_CD = #STR_CD#
		AND PORT_NO = #PORT_NO#
	</insert>
	
	<!-- 매장간판상태 등록 -->
	<insert id="insertTH_STR_SIGN_STATUS" parameterClass="java.util.Map">
		INSERT INTO TH_STR_SIGN_STATUS
		(
		     STR_CD
		    ,YYYYMMDD
		    ,HHMIN
		    ,SIGN_STAT
		    ,WEATHER_CD
		    ,REGI_ID
		    ,REGI_DTTM
		    ,FINAL_MOD_ID
		    ,FINAL_MOD_DTTM
		)
		VALUES
		(
			 #STR_CD#
		    ,#YYYYMMDD#
		    ,#HHMIN#
		    ,#SIGN_STAT#
		    ,#WEATHER_CD#
		    ,#REGI_ID#
		    ,NOW()
		    ,#REGI_ID#
		    ,NOW()
		)
	</insert>
	
	<!-- 매장간판제어로그 등록 -->
	<insert id="insertTH_STR_SIGN_CTRL_LOG" parameterClass="java.util.Map">
		INSERT INTO TH_STR_SIGN_CTRL_LOG
		(
		     STR_CD
		    ,YYYYMMDD
		    ,HHMIN
		    ,SSMS
		    ,SIGN_STAT
		    ,SIGN_STAT_OLD
		    ,WEATHER_CD
		    ,CONTROL_AGT
		    ,REGI_ID
		    ,REGI_DTTM
		    ,FINAL_MOD_ID
		    ,FINAL_MOD_DTTM
		)
		VALUES
		(
			 #STR_CD#
		    ,#YYYYMMDD#
		    ,#HHMIN#
		    ,#SSMS#
		    ,#SIGN_STAT#
		    ,#SIGN_STAT_OLD#
		    ,#WEATHER_CD#
		    ,#CONTROL_AGT#
		    ,#REGI_ID#
		    ,NOW()
		    ,#REGI_ID#
		    ,NOW()
		)
	</insert>
	
	<!-- 매장에어컨제어로그 등록 -->
	<insert id="insertTH_STR_AIRCON_CTRL_LOG" parameterClass="java.util.Map">
		INSERT INTO TH_STR_AIRCON_CTRL_LOG
		(
		     STR_CD
		    ,YYYYMMDD
		    ,HHMIN
		    ,SSMS
		    ,HACON_ID
		    ,WHO
		    ,ONOFF
		    ,OPER_YN
		    ,SENSING_TEMP_VAL
		    ,GUIDE_TEMP_VAL
		    ,COOLHEAT
		    ,CTRL_TEMP_VAL
		    ,CONTROL_AGT
		    ,REGI_ID
		    ,REGI_DTTM
		    ,FINAL_MOD_ID
		    ,FINAL_MOD_DTTM
		)
		VALUES
		(
			 #STR_CD#
		    ,#YYYYMMDD#
		    ,#HHMIN#
		    ,#SSMS#
		    ,#HACON_ID#
		    ,#WHO#
		    ,#ONOFF#
		    ,#OPER_YN#
		    ,CONCAT(#SENSING_TEMP_VAL#, '.0')
		    ,CONCAT(#GUIDE_TEMP_VAL#, '.0')
		    ,#COOLHEAT#
		    ,CONCAT(#CTRL_TEMP_VAL#, '.0')
		    ,#CONTROL_AGT#
		    ,#REGI_ID#
		    ,NOW()
		    ,#REGI_ID#
		    ,NOW()
		)
	</insert>
	
	<!-- 매장피크알람 등록 -->
	<insert id="insertTH_STR_PEAK_ALARM" parameterClass="java.util.Map">
		INSERT INTO TH_STR_PEAK_ALARM
		(
		     STR_CD
		    ,YYYYMMDD
		    ,HHMIN
		    ,PEAK_WATAGE
		    ,USER_PEAK_WATAGE
		    ,PEAK_CONTROL_YN
		    ,SENSE_TEMP
		    ,SEND_SP
		    ,REGI_ID
		    ,REGI_DTTM
		    ,FINAL_MOD_ID
		    ,FINAL_MOD_DTTM
		)
		VALUES
		(
			 #STR_CD#
		    ,#YYYYMMDD#
		    ,#HHMIN#
		    ,#PEAK_WATAGE#
		    ,#USER_PEAK_WATAGE#
		    ,#PEAK_CONTROL_YN#
		    ,CONCAT(#SENSE_TEMP#, '.0')
		    ,'1'
		    ,#REGI_ID#
		    ,NOW()
		    ,#REGI_ID#
		    ,NOW()
		)
	</insert>
	
	<!-- 매장환경센서간략자료 등록 -->
	<insert id="insertTH_STR_SENSOR_BRIEF" parameterClass="java.util.Map">
		INSERT INTO TH_STR_SENSOR_BRIEF
		(
		     STR_CD
		    ,YYYYMMDD
		    ,HHMIN
		    ,SENSE_TEMP
		    ,T_SENSOR_TEMP
		    ,T_SENSOR_HUMID
		    ,HACON_STAT_CD
		    ,T_SENSOR_STAT_CD
		    ,REGI_ID
		    ,REGI_DTTM
		    ,FINAL_MOD_ID
		    ,FINAL_MOD_DTTM
		)
		VALUES
		(
			 #STR_CD#
		    ,#YYYYMMDD#
		    ,#HHMIN#
		    ,#SENSE_TEMP#
		    ,#T_SENSOR_TEMP#
		    ,#T_SENSOR_HUMID#
		    ,#HACON_STAT_CD#
		    ,#T_SENSOR_STAT_CD#
		    ,#REGI_ID#
		    ,NOW()
		    ,#REGI_ID#
		    ,NOW()
		)
	</insert>
	
</sqlMap>
